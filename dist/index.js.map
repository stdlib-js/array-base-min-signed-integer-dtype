{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar INT8_MIN = require( '@stdlib/constants-int8-min' );\nvar INT16_MIN = require( '@stdlib/constants-int16-min' );\nvar INT32_MIN = require( '@stdlib/constants-int32-min' );\nvar INT8_MAX = require( '@stdlib/constants-int8-max' );\nvar INT16_MAX = require( '@stdlib/constants-int16-max' );\nvar INT32_MAX = require( '@stdlib/constants-int32-max' );\n\n\n// MAIN //\n\n/**\n* Returns the minimum array data type for storing a provided signed integer value.\n*\n* @param {integer} value - scalar value\n* @returns {string} array data type\n*\n* @example\n* var dt = minSignedIntegerDataType( 9999 );\n* // returns 'int16'\n*\n* @example\n* var dt = minSignedIntegerDataType( 3 );\n* // returns 'int8'\n*/\nfunction minSignedIntegerDataType( value ) {\n\tif ( value < 0 ) {\n\t\tif ( value >= INT8_MIN ) {\n\t\t\treturn 'int8';\n\t\t}\n\t\tif ( value >= INT16_MIN ) {\n\t\t\treturn 'int16';\n\t\t}\n\t\tif ( value >= INT32_MIN ) {\n\t\t\treturn 'int32';\n\t\t}\n\t\treturn 'float64';\n\t}\n\tif ( value <= INT8_MAX ) {\n\t\treturn 'int8';\n\t}\n\tif ( value <= INT16_MAX ) {\n\t\treturn 'int16';\n\t}\n\tif ( value <= INT32_MAX ) {\n\t\treturn 'int32';\n\t}\n\treturn 'float64';\n}\n\n\n// EXPORTS //\n\nmodule.exports = minSignedIntegerDataType;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine the minimum array data type for storing a provided signed integer value.\n*\n* @module @stdlib/array-base-min-signed-integer-dtype\n*\n* @example\n* var minSignedIntegerDataType = require( '@stdlib/array-base-min-signed-integer-dtype' );\n*\n* var dt = minSignedIntegerDataType( 1280 );\n* // returns 'int16'\n*\n* dt = minSignedIntegerDataType( 3 );\n* // returns 'int8'\n*/\n\n// MODULES //\n\nvar minSignedIntegerDataType = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = minSignedIntegerDataType;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAW,QAAS,4BAA6B,EACjDC,EAAY,QAAS,6BAA8B,EACnDC,EAAY,QAAS,6BAA8B,EACnDC,EAAW,QAAS,4BAA6B,EACjDC,EAAY,QAAS,6BAA8B,EACnDC,EAAY,QAAS,6BAA8B,EAmBvD,SAASC,EAA0BC,EAAQ,CAC1C,OAAKA,EAAQ,EACPA,GAASP,EACN,OAEHO,GAASN,EACN,QAEHM,GAASL,EACN,QAED,UAEHK,GAASJ,EACN,OAEHI,GAASH,EACN,QAEHG,GAASF,EACN,QAED,SACR,CAKAN,EAAO,QAAUO,ICrCjB,IAAIE,EAA2B,IAK/B,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "INT8_MIN", "INT16_MIN", "INT32_MIN", "INT8_MAX", "INT16_MAX", "INT32_MAX", "minSignedIntegerDataType", "value", "minSignedIntegerDataType"]
}
